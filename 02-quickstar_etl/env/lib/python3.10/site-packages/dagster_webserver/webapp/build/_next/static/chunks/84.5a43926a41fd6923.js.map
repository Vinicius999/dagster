{"version":3,"file":"static/chunks/84.5a43926a41fd6923.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/assets/AutomaterializeTagWithEvaluation.tsx","webpack://_N_E/../ui-core/src/hooks/useFavicon.tsx","webpack://_N_E/../ui-core/src/runs/Run.tsx","webpack://_N_E/../ui-core/src/runs/RunConfigDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunTimingTags.tsx","webpack://_N_E/../ui-core/src/runs/RunRoot.tsx","webpack://_N_E/../ui-core/src/runs/useJobReExecution.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {Box, Icon, MiddleTruncate, Popover, Tag} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {AssetKey} from './types';\n\nconst COLLATOR = new Intl.Collator(navigator.language, {sensitivity: 'base'});\n\ninterface Props {\n  assetKeys: AssetKey[];\n  evaluationId: string;\n}\n\nexport const AutomaterializeTagWithEvaluation = ({assetKeys, evaluationId}: Props) => {\n  const sortedKeys = React.useMemo(() => {\n    return [...assetKeys].sort((a, b) => COLLATOR.compare(a.path.join('/'), b.path.join('/')));\n  }, [assetKeys]);\n\n  return (\n    <Popover\n      placement=\"bottom\"\n      content={\n        <div style={{width: '340px'}}>\n          <Box padding={{vertical: 8, horizontal: 12}} border=\"bottom\" style={{fontWeight: 600}}>\n            Auto-materialized\n          </Box>\n          <Box\n            flex={{direction: 'column', gap: 12}}\n            padding={{vertical: 12}}\n            style={{maxHeight: '220px', overflowY: 'auto'}}\n          >\n            {sortedKeys.map((assetKey) => {\n              const url = assetDetailsPathForKey(assetKey, {\n                view: 'auto-materialize-history',\n                evaluation: evaluationId,\n              });\n              return (\n                <Box\n                  key={url}\n                  padding={{vertical: 8, left: 12, right: 16}}\n                  flex={{\n                    direction: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    gap: 8,\n                  }}\n                  style={{overflow: 'hidden'}}\n                >\n                  <Box\n                    flex={{direction: 'row', alignItems: 'center', gap: 8}}\n                    style={{overflow: 'hidden'}}\n                  >\n                    <Icon name=\"asset\" />\n                    <MiddleTruncate text={assetKey.path.join('/')} />\n                  </Box>\n                  <Link to={url} style={{whiteSpace: 'nowrap'}}>\n                    View evaluation\n                  </Link>\n                </Box>\n              );\n            })}\n          </Box>\n        </div>\n      }\n      interactionKind=\"hover\"\n    >\n      <Tag icon=\"auto_materialize_policy\">Auto-materialized</Tag>\n    </Popover>\n  );\n};\n","import * as React from 'react';\n\nexport const useFavicon = (href: string) => {\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"][type=\"image/svg+xml\"]');\n    if (!el) {\n      return;\n    }\n    const previousHref = el.getAttribute('href');\n    el.setAttribute('href', href);\n    return () => {\n      if (previousHref) {\n        el.setAttribute('href', previousHref);\n      }\n    };\n  }, [href]);\n};\n","import {\n  Box,\n  NonIdealState,\n  SplitPanelContainer,\n  ErrorBoundary,\n  Button,\n  Icon,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {GanttChart, GanttChartLoadingState, GanttChartMode, QueuedState} from '../gantt/GanttChart';\nimport {toGraphQueryItems} from '../gantt/toGraphQueryItems';\nimport {RunStatus} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useFavicon} from '../hooks/useFavicon';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {useSupportsCapturedLogs} from '../instance/useSupportsCapturedLogs';\n\nimport {CapturedOrExternalLogPanel} from './CapturedLogPanel';\nimport {ComputeLogPanel} from './ComputeLogPanel';\nimport {LogFilter, LogsProvider, LogsProviderLogs} from './LogsProvider';\nimport {LogsScrollingTable} from './LogsScrollingTable';\nimport {LogsToolbar, LogType} from './LogsToolbar';\nimport {RunActionButtons} from './RunActionButtons';\nimport {RunContext} from './RunContext';\nimport {IRunMetadataDict, RunMetadataProvider} from './RunMetadataProvider';\nimport {RunDagsterRunEventFragment, RunPageFragment} from './types/RunFragments.types';\nimport {\n  useComputeLogFileKeyForSelection,\n  matchingComputeLogKeyFromStepKey,\n} from './useComputeLogFileKeyForSelection';\nimport {useJobReExecution} from './useJobReExecution';\nimport {useQueryPersistedLogFilter} from './useQueryPersistedLogFilter';\n\ninterface RunProps {\n  runId: string;\n  run?: RunPageFragment;\n}\n\nconst runStatusFavicon = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.FAILURE:\n      return '/favicon-run-failed.svg';\n    case RunStatus.SUCCESS:\n      return '/favicon-run-success.svg';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n    case RunStatus.CANCELING:\n      return '/favicon-run-pending.svg';\n    default:\n      return '/favicon.svg';\n  }\n};\n\nexport const Run: React.FC<RunProps> = (props) => {\n  const {run, runId} = props;\n  const [logsFilter, setLogsFilter] = useQueryPersistedLogFilter();\n  const [selectionQuery, setSelectionQuery] = useQueryPersistedState<string>({\n    queryKey: 'selection',\n    defaults: {selection: ''},\n  });\n\n  useFavicon(run ? runStatusFavicon(run.status) : '/favicon.svg');\n  useDocumentTitle(\n    run\n      ? `${!isHiddenAssetGroupJob(run.pipelineName) ? run.pipelineName : ''} ${runId.slice(\n          0,\n          8,\n        )} [${run.status}]`\n      : `Run: ${runId}`,\n  );\n\n  const onShowStateDetails = (stepKey: string, logs: RunDagsterRunEventFragment[]) => {\n    const errorNode = logs.find(\n      (node) => node.__typename === 'ExecutionStepFailureEvent' && node.stepKey === stepKey,\n    );\n\n    if (errorNode) {\n      showCustomAlert({\n        body: <PythonErrorInfo error={errorNode} />,\n      });\n    }\n  };\n\n  const onSetSelectionQuery = (query: string) => {\n    setSelectionQuery(query);\n    setLogsFilter({\n      ...logsFilter,\n      logQuery: query !== '*' ? [{token: 'query', value: query}] : [],\n    });\n  };\n\n  return (\n    <RunContext.Provider value={run}>\n      <LogsProvider key={runId} runId={runId}>\n        {(logs) => (\n          <RunMetadataProvider logs={logs}>\n            {(metadata) => (\n              <RunWithData\n                run={run}\n                runId={runId}\n                logs={logs}\n                logsFilter={logsFilter}\n                metadata={metadata}\n                selectionQuery={selectionQuery}\n                onSetLogsFilter={setLogsFilter}\n                onSetSelectionQuery={onSetSelectionQuery}\n                onShowStateDetails={onShowStateDetails}\n              />\n            )}\n          </RunMetadataProvider>\n        )}\n      </LogsProvider>\n    </RunContext.Provider>\n  );\n};\n\ninterface RunWithDataProps {\n  run?: RunPageFragment;\n  runId: string;\n  selectionQuery: string;\n  logs: LogsProviderLogs;\n  logsFilter: LogFilter;\n  metadata: IRunMetadataDict;\n  onSetLogsFilter: (v: LogFilter) => void;\n  onSetSelectionQuery: (query: string) => void;\n  onShowStateDetails: (stepKey: string, logs: RunDagsterRunEventFragment[]) => void;\n}\n\nconst logTypeFromQuery = (queryLogType: string) => {\n  switch (queryLogType) {\n    case 'stdout':\n      return LogType.stdout;\n    case 'stderr':\n      return LogType.stderr;\n    default:\n      return LogType.structured;\n  }\n};\n\n/**\n * Note: There are two places we keep a \"step query string\" in the Run view:\n * selectionQuery and logsFilter.logsQuery.\n *\n * - selectionQuery is set when you click around in the Gannt view and is the\n *   selection used for re-execution, etc. When set, we autofill logsFilter.logsQuery.\n *\n * - logsFilter.logsQuery is used for filtering the logs. It can be cleared separately\n *   from the selectionQuery, so you can select a step but navigate elsewhere in the logs.\n *\n * We could revisit this in the future but I believe we iterated quite a bit to get to this\n * solution and we should avoid locking the two filter inputs together completely.\n */\nconst RunWithData: React.FC<RunWithDataProps> = ({\n  run,\n  runId,\n  logs,\n  logsFilter,\n  metadata,\n  selectionQuery,\n  onSetLogsFilter,\n  onSetSelectionQuery,\n}) => {\n  const onLaunch = useJobReExecution(run);\n\n  const [queryLogType, setQueryLogType] = useQueryPersistedState<string>({\n    queryKey: 'logType',\n    defaults: {logType: LogType.structured},\n  });\n\n  const logType = logTypeFromQuery(queryLogType);\n  const setLogType = (lt: LogType) => setQueryLogType(LogType[lt]);\n  const [computeLogUrl, setComputeLogUrl] = React.useState<string | null>(null);\n\n  const stepKeysJSON = JSON.stringify(Object.keys(metadata.steps).sort());\n  const stepKeys = React.useMemo(() => JSON.parse(stepKeysJSON), [stepKeysJSON]);\n\n  const runtimeGraph = run?.executionPlan && toGraphQueryItems(run?.executionPlan, metadata.steps);\n\n  const selectionStepKeys = React.useMemo(() => {\n    return runtimeGraph && selectionQuery && selectionQuery !== '*'\n      ? filterByQuery(runtimeGraph, selectionQuery).all.map((n) => n.name)\n      : [];\n  }, [runtimeGraph, selectionQuery]);\n\n  const supportsCapturedLogs = useSupportsCapturedLogs();\n  const {logCaptureInfo, computeLogFileKey, setComputeLogFileKey} =\n    useComputeLogFileKeyForSelection({\n      stepKeys,\n      selectionStepKeys,\n      metadata,\n      defaultToFirstStep: false,\n    });\n\n  const logsFilterStepKeys = runtimeGraph\n    ? logsFilter.logQuery\n        .filter((v) => v.token && v.token === 'query')\n        .reduce((accum, v) => {\n          return [...accum, ...filterByQuery(runtimeGraph, v.value).all.map((n) => n.name)];\n        }, [] as string[])\n    : [];\n\n  const onClickStep = (stepKey: string, evt: React.MouseEvent<any>) => {\n    const index = selectionStepKeys.indexOf(stepKey);\n    let newSelected: string[];\n    const filterForExactStep = `\"${stepKey}\"`;\n    if (evt.shiftKey) {\n      // shift-click to multi select steps, preserving quotations if present\n      newSelected = [\n        ...selectionStepKeys.map((k) => (selectionQuery.includes(`\"${k}\"`) ? `\"${k}\"` : k)),\n      ];\n\n      if (index !== -1) {\n        // deselect the step if already selected\n        newSelected.splice(index, 1);\n      } else {\n        // select the step otherwise\n        newSelected.push(filterForExactStep);\n      }\n    } else {\n      if (selectionStepKeys.length === 1 && index !== -1) {\n        // deselect the step if already selected\n        newSelected = [];\n      } else {\n        // select the step otherwise\n        newSelected = [filterForExactStep];\n\n        // When only one step is selected, set the compute log key as well.\n        const matchingLogKey = matchingComputeLogKeyFromStepKey(metadata.logCaptureSteps, stepKey);\n        matchingLogKey && setComputeLogFileKey(matchingLogKey);\n      }\n    }\n\n    onSetSelectionQuery(newSelected.join(', ') || '*');\n  };\n\n  const [splitPanelContainer, setSplitPanelContainer] = React.useState<null | SplitPanelContainer>(\n    null,\n  );\n  React.useEffect(() => {\n    const initialSize = splitPanelContainer?.getSize();\n    switch (initialSize) {\n      case 100:\n        setExpandedPanel('top');\n        return;\n      case 0:\n        setExpandedPanel('bottom');\n        return;\n    }\n  }, [splitPanelContainer]);\n\n  const [expandedPanel, setExpandedPanel] = React.useState<null | 'top' | 'bottom'>(null);\n  const isTopExpanded = expandedPanel === 'top';\n  const isBottomExpanded = expandedPanel === 'bottom';\n\n  const expandBottomPanel = () => {\n    splitPanelContainer?.onChangeSize(0);\n    setExpandedPanel('bottom');\n  };\n  const expandTopPanel = () => {\n    splitPanelContainer?.onChangeSize(100);\n    setExpandedPanel('top');\n  };\n  const resetPanels = () => {\n    splitPanelContainer?.onChangeSize(50);\n    setExpandedPanel(null);\n  };\n\n  const gantt = (metadata: IRunMetadataDict) => {\n    if (!run) {\n      return <GanttChartLoadingState runId={runId} />;\n    }\n\n    if (run.status === 'QUEUED') {\n      return <QueuedState run={run} />;\n    }\n\n    if (run.executionPlan && runtimeGraph) {\n      return (\n        <ErrorBoundary region=\"gantt chart\">\n          <GanttChart\n            options={{\n              mode: GanttChartMode.WATERFALL_TIMED,\n            }}\n            toolbarActions={\n              <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n                <Tooltip content={isTopExpanded ? 'Collapse' : 'Expand'}>\n                  <Button\n                    icon={<Icon name={isTopExpanded ? 'collapse_arrows' : 'expand_arrows'} />}\n                    onClick={isTopExpanded ? resetPanels : expandTopPanel}\n                  />\n                </Tooltip>\n                <RunActionButtons\n                  run={run}\n                  onLaunch={onLaunch}\n                  graph={runtimeGraph}\n                  metadata={metadata}\n                  selection={{query: selectionQuery, keys: selectionStepKeys}}\n                />\n              </Box>\n            }\n            runId={runId}\n            graph={runtimeGraph}\n            metadata={metadata}\n            selection={{query: selectionQuery, keys: selectionStepKeys}}\n            onClickStep={onClickStep}\n            onSetSelection={onSetSelectionQuery}\n            focusedTime={logsFilter.focusedTime}\n          />\n        </ErrorBoundary>\n      );\n    }\n\n    return <NonIdealState icon=\"error\" title=\"Unable to build execution plan\" />;\n  };\n\n  return (\n    <>\n      <SplitPanelContainer\n        ref={(container) => {\n          setSplitPanelContainer(container);\n        }}\n        axis=\"vertical\"\n        identifier=\"run-gantt\"\n        firstInitialPercent={35}\n        firstMinSize={56}\n        first={gantt(metadata)}\n        second={\n          <ErrorBoundary region=\"logs\">\n            <LogsContainer>\n              <LogsToolbar\n                logType={logType}\n                onSetLogType={setLogType}\n                filter={logsFilter}\n                onSetFilter={onSetLogsFilter}\n                steps={stepKeys}\n                metadata={metadata}\n                computeLogFileKey={computeLogFileKey}\n                onSetComputeLogKey={setComputeLogFileKey}\n                computeLogUrl={computeLogUrl}\n                counts={logs.counts}\n                isSectionExpanded={isBottomExpanded}\n                toggleExpanded={isBottomExpanded ? resetPanels : expandBottomPanel}\n              />\n              {logType !== LogType.structured ? (\n                !computeLogFileKey ? (\n                  <NoStepSelectionState type={logType} />\n                ) : supportsCapturedLogs ? (\n                  <CapturedOrExternalLogPanel\n                    logKey={computeLogFileKey ? [runId, 'compute_logs', computeLogFileKey] : []}\n                    logCaptureInfo={logCaptureInfo}\n                    visibleIOType={LogType[logType]}\n                    onSetDownloadUrl={setComputeLogUrl}\n                  />\n                ) : (\n                  <ComputeLogPanel\n                    runId={runId}\n                    computeLogFileKey={stepKeys.length ? computeLogFileKey : undefined}\n                    ioType={LogType[logType]}\n                    setComputeLogUrl={setComputeLogUrl}\n                  />\n                )\n              ) : (\n                <LogsScrollingTable\n                  logs={logs}\n                  filter={logsFilter}\n                  filterStepKeys={logsFilterStepKeys}\n                  filterKey={`${JSON.stringify(logsFilter)}`}\n                  metadata={metadata}\n                />\n              )}\n            </LogsContainer>\n          </ErrorBoundary>\n        }\n      />\n    </>\n  );\n};\n\nconst LogsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst NoStepSelectionState = ({type}: {type: LogType}) => {\n  return (\n    <Box\n      flex={{\n        direction: 'row',\n        grow: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      style={{background: '#221F1B'}}\n    >\n      <NonIdealState\n        title={`Select a step to view ${type}`}\n        icon=\"warning\"\n        description=\"Select a step on the Gantt chart or from the dropdown above to view logs.\"\n      />\n    </Box>\n  );\n};\n","import {useMutation} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogFooter,\n  Group,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  StyledRawCodeMirror,\n  Subheading,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useFeatureFlags} from '../app/Flags';\nimport {useCopyToClipboard} from '../app/browser';\nimport {FREE_CONCURRENCY_SLOTS_FOR_RUN_MUTATION} from '../instance/InstanceConcurrency';\nimport {\n  FreeConcurrencySlotsForRunMutation,\n  FreeConcurrencySlotsForRunMutationVariables,\n} from '../instance/types/InstanceConcurrency.types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {workspacePathFromRunDetails, workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {doneStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {TerminationDialog} from './TerminationDialog';\nimport {RunFragment} from './types/RunFragments.types';\n\ntype VisibleDialog = 'config' | 'delete' | 'terminate' | 'free_slots' | null;\n\nexport const RunConfigDialog: React.FC<{run: RunFragment; isJob: boolean}> = ({run, isJob}) => {\n  const {runConfigYaml} = run;\n  const {flagInstanceConcurrencyLimits} = useFeatureFlags();\n  const [visibleDialog, setVisibleDialog] = React.useState<VisibleDialog>(null);\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const copy = useCopyToClipboard();\n  const history = useHistory();\n\n  const [freeSlots] = useMutation<\n    FreeConcurrencySlotsForRunMutation,\n    FreeConcurrencySlotsForRunMutationVariables\n  >(FREE_CONCURRENCY_SLOTS_FOR_RUN_MUTATION);\n\n  const copyConfig = async () => {\n    copy(runConfigYaml);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const freeConcurrencySlots = async () => {\n    const resp = await freeSlots({variables: {runId: run.id}});\n    if (resp.data?.freeConcurrencySlotsForRun) {\n      await showSharedToaster({\n        intent: 'success',\n        icon: 'check_circle',\n        message: 'Freed concurrency slots',\n      });\n    }\n  };\n\n  const jobPath = workspacePathFromRunDetails({\n    id: run.id,\n    repositoryName: run.repositoryOrigin?.repositoryName,\n    repositoryLocationName: run.repositoryOrigin?.repositoryLocationName,\n    pipelineName: run.pipelineName,\n    isJob,\n  });\n\n  return (\n    <div>\n      <Group direction=\"row\" spacing={8}>\n        {run.hasReExecutePermission ? (\n          <AnchorButton icon={<Icon name=\"edit\" />} to={jobPath}>\n            Open in Launchpad\n          </AnchorButton>\n        ) : (\n          <Tooltip content={NO_LAUNCH_PERMISSION_MESSAGE} useDisabledButtonTooltipFix>\n            <Button icon={<Icon name=\"edit\" />} disabled>\n              Open in Launchpad\n            </Button>\n          </Tooltip>\n        )}\n        <Button icon={<Icon name=\"tag\" />} onClick={() => setVisibleDialog('config')}>\n          View tags and config\n        </Button>\n        <Popover\n          position=\"bottom-right\"\n          content={\n            <Menu>\n              <Tooltip\n                content=\"Loadable in dagster-webserver-debug\"\n                position=\"left\"\n                targetTagName=\"div\"\n              >\n                <MenuItem\n                  text=\"Download debug file\"\n                  icon={<Icon name=\"download_for_offline\" />}\n                  onClick={() => window.open(`${rootServerURI}/download_debug/${run.id}`)}\n                />\n              </Tooltip>\n              {flagInstanceConcurrencyLimits &&\n              run.hasConcurrencyKeySlots &&\n              doneStatuses.has(run.status) ? (\n                <MenuItem\n                  text=\"Free concurrency slots\"\n                  icon={<Icon name=\"lock\" />}\n                  onClick={freeConcurrencySlots}\n                />\n              ) : null}\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </Group>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        onClose={() => setVisibleDialog(null)}\n        style={{\n          width: '90vw',\n          maxWidth: '1000px',\n          minWidth: '600px',\n          height: '90vh',\n          maxHeight: '1000px',\n          minHeight: '600px',\n        }}\n        title=\"Run configuration\"\n      >\n        <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n          <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={run.tags} mode={isJob ? null : run.mode} />\n              </div>\n            </Box>\n            <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n              <Box border=\"bottom\" padding={{left: 24, bottom: 16}}>\n                <Subheading>Config</Subheading>\n              </Box>\n              <CodeMirrorContainer>\n                <StyledRawCodeMirror\n                  value={runConfigYaml}\n                  options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n                  theme={['config-editor']}\n                />\n              </CodeMirrorContainer>\n            </Box>\n          </Box>\n          <DialogFooter topBorder>\n            <Button onClick={() => copyConfig()} intent=\"none\">\n              Copy config\n            </Button>\n            <Button onClick={() => setVisibleDialog(null)} intent=\"primary\">\n              OK\n            </Button>\n          </DialogFooter>\n        </Box>\n      </Dialog>\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            if (run.repositoryOrigin) {\n              history.push(\n                workspacePipelinePath({\n                  repoName: run.repositoryOrigin.repositoryName,\n                  repoLocation: run.repositoryOrigin.repositoryLocationName,\n                  pipelineName: run.pipelineName,\n                  isJob,\n                  path: '/runs',\n                }),\n              );\n            } else {\n              setVisibleDialog(null);\n            }\n          }}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            refetch();\n          }}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n","import {Box, Popover, Tag} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\n\nimport {RunTimingDetails} from './RunTimingDetails';\nimport {RunTimingFragment} from './types/RunTimingDetails.types';\n\nexport const RunTimingTags = ({loading, run}: {loading: boolean; run: RunTimingFragment}) => {\n  return (\n    <>\n      {run?.startTime ? (\n        <Popover\n          interactionKind=\"hover\"\n          placement=\"bottom\"\n          content={\n            <Box padding={16}>\n              <RunTimingDetails run={run} loading={loading} />\n            </Box>\n          }\n        >\n          <Tag icon=\"schedule\">\n            <TimestampDisplay\n              timestamp={run.startTime}\n              timeFormat={{showSeconds: true, showTimezone: false}}\n            />\n          </Tag>\n        </Popover>\n      ) : run.updateTime ? (\n        <Tag icon=\"schedule\">\n          <TimestampDisplay\n            timestamp={run.updateTime}\n            timeFormat={{showSeconds: true, showTimezone: false}}\n          />\n        </Tag>\n      ) : undefined}\n      {run?.startTime && run?.endTime ? (\n        <Popover\n          interactionKind=\"hover\"\n          placement=\"bottom\"\n          content={\n            <Box padding={16}>\n              <RunTimingDetails run={run} loading={loading} />\n            </Box>\n          }\n        >\n          <Tag icon=\"timer\">\n            <span style={{fontVariantNumeric: 'tabular-nums'}}>\n              {run?.startTime\n                ? formatElapsedTime((run?.endTime * 1000 || Date.now()) - run?.startTime * 1000)\n                : '–'}\n            </span>\n          </Tag>\n        </Popover>\n      ) : null}\n    </>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, FontFamily, Heading, NonIdealState, PageHeader, Tag} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {AutomaterializeTagWithEvaluation} from '../assets/AutomaterializeTagWithEvaluation';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\n\nimport {AssetKeyTagCollection, AssetCheckTagCollection} from './AssetTagCollections';\nimport {Run} from './Run';\nimport {RunConfigDialog} from './RunConfigDialog';\nimport {RUN_PAGE_FRAGMENT} from './RunFragments';\nimport {RunStatusTag} from './RunStatusTag';\nimport {DagsterTag} from './RunTag';\nimport {RunTimingTags} from './RunTimingTags';\nimport {assetKeysForRun} from './RunUtils';\nimport {RunRootQuery, RunRootQueryVariables} from './types/RunRoot.types';\n\nexport const RunRoot = () => {\n  useTrackPageView();\n\n  const {runId} = useParams<{runId: string}>();\n  useDocumentTitle(runId ? `Run ${runId.slice(0, 8)}` : 'Run');\n\n  const {data, loading} = useQuery<RunRootQuery, RunRootQueryVariables>(RUN_ROOT_QUERY, {\n    variables: {runId},\n  });\n\n  const run = data?.pipelineRunOrError.__typename === 'Run' ? data.pipelineRunOrError : null;\n  const snapshotID = run?.pipelineSnapshotId;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n  const repoAddress = repoMatch?.match\n    ? buildRepoAddress(repoMatch.match.repository.name, repoMatch.match.repositoryLocation.name)\n    : null;\n\n  const isJob = React.useMemo(\n    () => !!(run && repoMatch && isThisThingAJob(repoMatch.match, run.pipelineName)),\n    [run, repoMatch],\n  );\n\n  const automaterializeTag = React.useMemo(\n    () => run?.tags.find((tag) => tag.key === DagsterTag.AssetEvaluationID) || null,\n    [run],\n  );\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n      }}\n    >\n      <Box\n        flex={{direction: 'row', alignItems: 'flex-start'}}\n        style={{\n          position: 'relative',\n          zIndex: 1,\n        }}\n      >\n        <PageHeader\n          title={\n            <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n              {runId.slice(0, 8)}\n            </Heading>\n          }\n          tags={\n            run ? (\n              <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n                <RunStatusTag status={run.status} />\n                {!isHiddenAssetGroupJob(run.pipelineName) ? (\n                  <Tag icon=\"run\">\n                    Run of{' '}\n                    <PipelineReference\n                      pipelineName={run?.pipelineName}\n                      pipelineHrefContext={repoAddress || 'repo-unknown'}\n                      snapshotId={snapshotID}\n                      size=\"small\"\n                      isJob={isJob}\n                    />\n                  </Tag>\n                ) : null}\n                <AssetCheckTagCollection useTags assetChecks={run.assetCheckSelection} />\n                <AssetKeyTagCollection\n                  useTags\n                  assetKeys={\n                    isHiddenAssetGroupJob(run.pipelineName)\n                      ? assetKeysForRun(run)\n                      : run.assets.map((a) => a.key)\n                  }\n                />\n                <RunTimingTags run={run} loading={loading} />\n                {automaterializeTag && run.assetSelection?.length ? (\n                  <AutomaterializeTagWithEvaluation\n                    assetKeys={run.assetSelection}\n                    evaluationId={automaterializeTag.value}\n                  />\n                ) : null}\n              </Box>\n            ) : null\n          }\n          right={run ? <RunConfigDialog run={run} isJob={isJob} /> : null}\n        />\n      </Box>\n      <RunById data={data} runId={runId} />\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default RunRoot;\n\nconst RunById: React.FC<{data: RunRootQuery | undefined; runId: string}> = (props) => {\n  const {data, runId} = props;\n\n  if (!data || !data.pipelineRunOrError) {\n    return <Run run={undefined} runId={runId} />;\n  }\n\n  if (data.pipelineRunOrError.__typename !== 'Run') {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No run found\"\n          description=\"The run with this ID does not exist or has been cleaned up.\"\n        />\n      </Box>\n    );\n  }\n\n  return <Run run={data.pipelineRunOrError} runId={runId} />;\n};\n\nconst RUN_ROOT_QUERY = gql`\n  query RunRootQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        ...RunPageFragment\n      }\n    }\n  }\n\n  ${RUN_PAGE_FRAGMENT}\n`;\n","import {useMutation} from '@apollo/client';\nimport * as React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport {showLaunchError} from '../launchpad/showLaunchError';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\n\nimport {\n  getReexecutionVariables,\n  handleLaunchResult,\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  ReExecutionStyle,\n} from './RunUtils';\nimport {RunPageFragment} from './types/RunFragments.types';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\nexport const useJobReExecution = (run: RunPageFragment | undefined | null) => {\n  const history = useHistory();\n  const [launchPipelineReexecution] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n\n  return React.useCallback(\n    async (style: ReExecutionStyle) => {\n      if (!run || !run.pipelineSnapshotId || !repoMatch) {\n        return;\n      }\n\n      const variables = getReexecutionVariables({\n        run,\n        style,\n        repositoryLocationName: repoMatch.match.repositoryLocation.name,\n        repositoryName: repoMatch.match.repository.name,\n      });\n\n      try {\n        const result = await launchPipelineReexecution({variables});\n        handleLaunchResult(run.pipelineName, result.data?.launchPipelineReexecution, history, {\n          preserveQuerystring: true,\n          behavior: 'open',\n        });\n      } catch (error) {\n        showLaunchError(error as Error);\n      }\n    },\n    [history, launchPipelineReexecution, repoMatch, run],\n  );\n};\n"],"names":["COLLATOR","Intl","Collator","navigator","language","sensitivity","AutomaterializeTagWithEvaluation","param","assetKeys","evaluationId","sortedKeys","React","_to_consumable_array","_","sort","a","b","compare","path","join","jsx_runtime","jsx","Popover","placement","content","jsxs","div","style","width","Box","padding","vertical","horizontal","border","fontWeight","flex","direction","gap","maxHeight","overflowY","map","assetKey","url","assetDetailsPathForKey","view","evaluation","left","right","justifyContent","alignItems","overflow","Icon","name","MiddleTruncate","text","Link","to","whiteSpace","interactionKind","Tag","icon","useFavicon","href","el","document","querySelector","previousHref","getAttribute","setAttribute","runStatusFavicon","status","RunStatus","FAILURE","SUCCESS","STARTING","STARTED","CANCELING","Run","props","run","runId","useQueryPersistedLogFilter","logsFilter","setLogsFilter","useQueryPersistedState","queryKey","defaults","selection","selectionQuery","setSelectionQuery","useDocumentTitle","isHiddenAssetGroupJob","pipelineName","slice","concat","onShowStateDetails","stepKey","logs","errorNode","find","node","__typename","showCustomAlert","body","PythonErrorInfo","error","onSetSelectionQuery","query","_object_spread_props","_object_spread","logQuery","token","value","RunContext","Provider","LogsProvider","RunMetadataProvider","metadata","RunWithData","onSetLogsFilter","logTypeFromQuery","queryLogType","LogType","stdout","stderr","structured","onLaunch","useJobReExecution","logType","setQueryLogType","computeLogUrl","setComputeLogUrl","stepKeysJSON","JSON","stringify","Object","keys","steps","stepKeys","parse","runtimeGraph","executionPlan","toGraphQueryItems","selectionStepKeys","filterByQuery","all","n","supportsCapturedLogs","useSupportsCapturedLogs","useComputeLogFileKeyForSelection","defaultToFirstStep","logCaptureInfo","computeLogFileKey","setComputeLogFileKey","logsFilterStepKeys","filter","v","reduce","accum","splitPanelContainer","setSplitPanelContainer","initialSize","getSize","setExpandedPanel","expandedPanel","isTopExpanded","isBottomExpanded","resetPanels","onChangeSize","Fragment","SplitPanelContainer","ref","container","axis","identifier","firstInitialPercent","firstMinSize","first","QueuedState","ErrorBoundary","region","GanttChart","options","mode","GanttChartMode","WATERFALL_TIMED","toolbarActions","Tooltip","Button","onClick","RunActionButtons","graph","onClickStep","evt","newSelected","index","indexOf","filterForExactStep","shiftKey","k","includes","splice","push","length","matchingLogKey","matchingComputeLogKeyFromStepKey","logCaptureSteps","onSetSelection","focusedTime","NonIdealState","title","GanttChartLoadingState","second","LogsContainer","LogsToolbar","onSetLogType","lt","onSetFilter","onSetComputeLogKey","counts","isSectionExpanded","toggleExpanded","CapturedOrExternalLogPanel","logKey","visibleIOType","onSetDownloadUrl","ComputeLogPanel","undefined","ioType","NoStepSelectionState","type","LogsScrollingTable","filterStepKeys","filterKey","styled","withConfig","grow","background","description","RunConfigDialog","isJob","runConfigYaml","flagInstanceConcurrencyLimits","useFeatureFlags","visibleDialog","setVisibleDialog","rootServerURI","AppContext","refetch","RunsQueryRefetchContext","copy","useCopyToClipboard","history","useHistory","freeSlots","useMutation","FREE_CONCURRENCY_SLOTS_FOR_RUN_MUTATION","copyConfig","_async_to_generator","showSharedToaster","intent","message","_state","sent","freeConcurrencySlots","resp","variables","id","data","freeConcurrencySlotsForRun","jobPath","workspacePathFromRunDetails","repositoryName","repositoryOrigin","repositoryLocationName","Group","spacing","hasReExecutePermission","AnchorButton","NO_LAUNCH_PERMISSION_MESSAGE","useDisabledButtonTooltipFix","disabled","position","Menu","targetTagName","MenuItem","window","open","hasConcurrencyKeySlots","doneStatuses","has","hasDeletePermission","Dialog","isOpen","onClose","maxWidth","minWidth","height","minHeight","top","Subheading","RunTags","tags","bottom","CodeMirrorContainer","StyledRawCodeMirror","readOnly","lineNumbers","theme","DialogFooter","topBorder","DeletionDialog","onComplete","workspacePipelinePath","repoName","repoLocation","onTerminateInstead","selectedRuns","_define_property","canTerminate","hasTerminatePermission","TerminationDialog","RunTimingTags","loading","startTime","RunTimingDetails","TimestampDisplay","timestamp","timeFormat","showSeconds","showTimezone","updateTime","endTime","span","fontVariantNumeric","formatElapsedTime","Date","now","RunRoot","useTrackPageView","useParams","useQuery","RUN_ROOT_QUERY","pipelineRunOrError","snapshotID","pipelineSnapshotId","repoMatch","useRepositoryForRunWithParentSnapshot","repoAddress","match","buildRepoAddress","repository","repositoryLocation","isThisThingAJob","automaterializeTag","tag","key","DagsterTag","AssetEvaluationID","display","flexDirection","zIndex","PageHeader","Heading","fontFamily","FontFamily","monospace","fontSize","wrap","RunStatusTag","PipelineReference","pipelineHrefContext","snapshotId","size","AssetCheckTagCollection","useTags","assetChecks","assetCheckSelection","AssetKeyTagCollection","assetKeysForRun","assets","assetSelection","RunById","runs_RunRoot","gql","RUN_PAGE_FRAGMENT","launchPipelineReexecution","LAUNCH_PIPELINE_REEXECUTION_MUTATION","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_7__","result","getReexecutionVariables","handleLaunchResult","preserveQuerystring","behavior","showLaunchError"],"sourceRoot":""}